hi
install.packages("swirl")
library(swirl)
swril()
install.packages("swirl")
library(swirl)
swirl(output:1,2)
swirl(1,2,3)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
data(cars)
help.search()
library(swirl)
swirl()
getwd()
1s()
1s()
ls()
x<-9
ls()
dir()
?list.files
args(list.files())
args(list.files)
getwd()<-"old.dir"
old.dir<-getwd()
dir.create(testdir)
dir.create()
args(dir.create)
dir.create("testdir")
setwd()
setwd("testdir")
file.create("mytest.R")
getwd()
ls()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R" to "mytest2.R")
arug(file.rename)
args(file.rename)
file.rename("mytest.R","mytest2.R")
info(file.copy)
info(file.copy())
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
dir.create
?dir.create
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2"),file.path("testdir3")
dir.create("testdir2") and file.path("testdir3")
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3')
info()
dir.create(file.path('testdir2', 'testdir3')
testdir2
dir.create(file.path('testdir2', 'testdir3')
folder1
dir.create(file.path('testdir2', 'testdir3')
mk
dir.create(file.path('testdir2', 'testdir3')
dir.create(file.path("testdir2","testdir3")
dir.create(file.path("testdir2","testdir3")
info(dir.create)
info(dir.create)
dir.create(file.path("testdir2","testdir3")
jjijo
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3", recursive=true))
dir.create(file.path("testdir2","testdir3", recursive=TRUE))
dir.create(file.path("testdir2","testdir3", recursive=TRUE))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd
setwd(old.dir)
2
library(swirl)
swirl()
2
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.remove("mytest.R")
file.remove("mytest.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
2
print("s3j")
library(swirl)
swirl()
play()
5 %% 4
6 %% 3
3 %% 1
57%%7
nxt()
remainder <- function(num, divisor) {
ans<-num %% divisor
return(ans)
}
submit()
remainder <- function(num, divisor) {
divisor<-2
ans<-num %% divisor
return(ans)
}
submit()
remainder <- function(num, divisor = 2) {
num %% divisor
}
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
evaluate <- function(func, dat){
func (dat)
}
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(func(c(1.4,3.6,7.9,8.8)))
some_function <- function(func){
func(2, 4)
}
evaluate(sd(c(1.4,3.6,7.9,8.8)))
evaluate(cd,c(1.4,3.6,7.9,8.8)
)
evaluate(cd,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(x,c(8,4,0))
evaluate(function(x),c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
paste()
?paste
paste("Programming", "is", "fun!")
telegram <- function(...){
paste(START,...,STOP)
}
SUBMIT()
submit()
telegram <- function(...){
paste("START",...,"STOP")
}
submit()
telegram <- function(...){
paste("START",...,"STOP")
}
submit()
telegram("mid")
mad_libs <- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
mad_libs(place=beckley,adjective=smart,noun=he)
mad_libs(place="beckley",adjective="smart",noun="he")
%p% <- function(x,y){
paste("x"", "right")
}
%p% <- function(x,y){
paste("x"", "y")
}
"%p%" <- function(left, right){
paste(left, right)
}
submit()
"%p%"("I","love","R")
%p%("I","love","R!")
"%p%"("I","love","R!")
"%p%"("I","love R!")
"%p%"("I","love")"%p%"("love", "R!")
"%p%"("I","%p%"("love", "R!"))
"'I' %p% 'love' %p% 'R!'"
'I' %p% 'love' %p% 'R!'
data(cars)
help
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(dist ~ speed, cars)
plot(x = cars$dist, y = cars$speed)
plot(dist ~ speed, cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "myplot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(col=2, cars)
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
?points
plot(cars, pch=2)
data(mtcars)
play()
dim(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
plotFit(nruns=10, n=50,ngens=5,init_p=0.5,h=1000,s=0)
source("http://jonsmitchell.com/code/fxn05.R")
Pop1<-simPop(Popsize=50, nGenerations=100,initial_p=0.5,h =1,s=0)
test<-simPop(Popsize=10, nGenerations=10,initial_p=0.1,h =1,s=0)
test
plot(1:nrow(Pop1),Pop1[,1],ylim=c(0,1), type ="l" , xlab="generation", ylab="allele freq.",lwd=2)
lines(1:nrow(Pop1),Pop1[,2],lwd=2, col="red" )
legend ("topleft", legend = c ("a","b"),col= c ( "black" , "red") , lwd =2 , bty="n")
plotFit(nruns=10, n=50,ngens=5,init_p=0.5,h=1000,s=0)
plotFit(nruns=10, n=50,ngens=50,init_p=0.5,h=1000,s=0)
plotFit(nruns=10, n=50,ngens=50,init_p=0.5,h=1000,s=0.001)
plotFit(nruns=10, n=50,ngens=50,init_p=0.5,h=1000,s=0.01)
plotFit(nruns=10, n=50,ngens=50,init_p=0.5,h=1000,s=-0.01)
plotFit(nruns=3, n=50,ngens=200,init_p=0.5,h=1000,s=-0.01)
plotFit(nruns=3, n=50,ngens=200,init_p=0.5,h=1000,s=-1)
plotFit(nruns=3, n=50,ngens=20,init_p=0.5,h=1000,s=.0000001)
plotFit(nruns=3, n=50,ngens=200,init_p=0.5,h=1000,s=.0000001)
plotFit(nruns=3, n=50,ngens=2000,init_p=0.5,h=1000,s=.0000001)
### Most fit allele always don't go to fixation.
source("http://jonsmitchell.com/code/fxn05.R")
plotFit(nruns=3, n=50,ngens=500,init_p=0.5,h=1000,s=1)
Expectation<-c(10,10,10,10)
Observed<-c(15,15,5,5)
Chisq<-sum(((Expectation-Observed)^2)/Expectation)
Chisq
barplot(rbind(Expectation,Observed),beside=T,main=bquote(chi^2~"="~.(Chisq)),legend.text=c("expected","observed"))
barplot(rbind(Expectation,Observed),beside=T,main=bquote(chi^2~"="~.(Chisq)),legend.text=c("expected","observed"))
barplot(rbind(Expectation,Observed),beside=T,main=bquote(chi^2~"="~.(Chisq)),legend.text=c("expected","observed"))
Expectation1<-c(2,3,10,30)
Observed1<-c(5,0,0,35)
Chisq1<-sum(((Expectation1-Observed1)^2)/Expectation1)
Chisq1
barplot(rbind(Expectation1,Observed1),beside=T,main=bquote(chi^2~"="~.(Chisq1)),legend.text=c("expected1","observed1"))
barplot(rbind(Expectation1,Observed1),beside=T,main=bquote(chi^2~"="~.(Chisq1)),legend.text=c("expected1","observed1"))
Expectation1<-c(2,3,10,30)
Observed1<-c(10,10,10,10)
Chisq1<-sum(((Expectation1-Observed1)^2)/Expectation1)
Chisq1
Expectation1<-c(2,3,10,30)
Observed1<-c(40,0,0,0)
Chisq1<-sum(((Expectation1-Observed1)^2)/Expectation1)
Chisq1
### Chisquare moved further away from zero and is 765.
### As the chisquare value is increasing the expected and observed bars evenness is decreasing.
results<-read.csv("http://jonsmitchell.com/data/biol112labresults.csv,stringsAsFactors=F)
### Chisquare moved further away from zero and is 765.
### As the chisquare value is increasing the expected and observed bars evenness is decreasing.
results<-read.csv("http://jonsmitchell.com/data/biol112labresults.csv,stringsAsFactors=F")
### Chisquare moved further away from zero and is 765.
### As the chisquare value is increasing the expected and observed bars evenness is decreasing.
results<-read.csv("http://jonsmitchell.com/data/biol112labresults.csv",stringsAsFactors=F)
setwd("C:\\users\\Raza\\Desktop\\Evolution\\Tasks\\Task_04")
results<-read.csv("http://jonsmitchell.com/data/biol112labresults.csv",stringsAsFactors=F)
write.csv(results,"Biol112results.csv",quote=F)
counts<-results[,c("yellow","red","green","blue","black","tan")]
counts
backgrounds<-c("White","Red","Yel low","Green","Blue","Black")
backgrounds<-c("White","Red","Yel low","Green","Blue","Black")
backgrounds<-c("White","Red","Yel low","Green","Blue","Black")
backgrounds
backgrounds<-c("White","Red","Yellow","Green","Blue","Black")
backgrounds
backgroundCol<-c("white","#d53e4f","#fee08b","#abdda4","#3288bd","black")
backgroundCol
cChi(counts[1,])
calcChi(counts[1,])
counts[1,]
Chisqs<-apply(counts,1,calcChi)
plotChis(counts)
counts
Chisqs
?plotChis
### The higher the chi square value is the lower the evenness between the bars. At low chi-square values bars are even. the higher the chi-square value is the more observed values are far away from the expected values.
Avg<-mean(Chisqs)
Avg
### The average chi square value is 60.9981
### The graphs with high chi-square values have uneven bars and far from our expected results. Graphs with low and zero chi-square values have even bars and they are close to our expected results.
backgroundAvgs<-tapply(Chisqs,results[,3],mean)
### The average chi square value is 60.9981
### The graphs with high chi-square values have uneven bars and far from our expected results. Graphs with low and zero chi-square values have even bars and they are close to our expected results.
### Avg. chi square is larger than the critical value so we can say that difference between observed and expected values are clear.
backgroundAvgs<-tapply(Chisqs,results[,3],mean)
backgroundAvgs
propSig<-length(which(Chisqs>11.70))/length(Chisqs)
percSig<-round(100*propSig)
propSig
percSig
par(las=1, mar = c(4,4,1,1),mgp = c(2,0.5,0),tck=-0.01,cex.axis=1)
hist(Chisqs ,main="",xlab=" chi-squared values",ylab="frequency")
par(las=1,mar=c(4,4,1,1),mgp=c(2,0.5,0),tck=-0.01,cex.axis=1)
plot(1,1,xlim=c(0,400),ylim=c(1,8.5),xlab="",ylab="",type="n",yaxt="n" )
axis(2,at=1:length(backgrounds),labels=backgrounds)
mtext(side=1,expression(chi^2),cex=1.75,line=2.5)
counter<- 1
for ( i in backgrounds) {
Data<-Chisqs[which(results[,3] == i)]
addHist(Y=counter,Dat=Data,Color=backgroundCol[counter])
counter<- counter+1
}
abline(v=11.70,lty=2,lwd=2,col="black")
