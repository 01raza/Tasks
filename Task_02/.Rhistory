hi
install.packages("swirl")
library(swirl)
swril()
install.packages("swirl")
library(swirl)
swirl(output:1,2)
swirl(1,2,3)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
data(cars)
help.search()
library(swirl)
swirl()
getwd()
1s()
1s()
ls()
x<-9
ls()
dir()
?list.files
args(list.files())
args(list.files)
getwd()<-"old.dir"
old.dir<-getwd()
dir.create(testdir)
dir.create()
args(dir.create)
dir.create("testdir")
setwd()
setwd("testdir")
file.create("mytest.R")
getwd()
ls()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R" to "mytest2.R")
arug(file.rename)
args(file.rename)
file.rename("mytest.R","mytest2.R")
info(file.copy)
info(file.copy())
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
dir.create
?dir.create
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2"),file.path("testdir3")
dir.create("testdir2") and file.path("testdir3")
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3')
info()
dir.create(file.path('testdir2', 'testdir3')
testdir2
dir.create(file.path('testdir2', 'testdir3')
folder1
dir.create(file.path('testdir2', 'testdir3')
mk
dir.create(file.path('testdir2', 'testdir3')
dir.create(file.path("testdir2","testdir3")
dir.create(file.path("testdir2","testdir3")
info(dir.create)
info(dir.create)
dir.create(file.path("testdir2","testdir3")
jjijo
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3", recursive=true))
dir.create(file.path("testdir2","testdir3", recursive=TRUE))
dir.create(file.path("testdir2","testdir3", recursive=TRUE))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd
setwd(old.dir)
2
library(swirl)
swirl()
2
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.remove("mytest.R")
file.remove("mytest.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
2
print("s3j")
library(swirl)
swirl()
play()
5 %% 4
6 %% 3
3 %% 1
57%%7
nxt()
remainder <- function(num, divisor) {
ans<-num %% divisor
return(ans)
}
submit()
remainder <- function(num, divisor) {
divisor<-2
ans<-num %% divisor
return(ans)
}
submit()
remainder <- function(num, divisor = 2) {
num %% divisor
}
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
evaluate <- function(func, dat){
func (dat)
}
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(func(c(1.4,3.6,7.9,8.8)))
some_function <- function(func){
func(2, 4)
}
evaluate(sd(c(1.4,3.6,7.9,8.8)))
evaluate(cd,c(1.4,3.6,7.9,8.8)
)
evaluate(cd,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(x,c(8,4,0))
evaluate(function(x),c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
paste()
?paste
paste("Programming", "is", "fun!")
telegram <- function(...){
paste(START,...,STOP)
}
SUBMIT()
submit()
telegram <- function(...){
paste("START",...,"STOP")
}
submit()
telegram <- function(...){
paste("START",...,"STOP")
}
submit()
telegram("mid")
mad_libs <- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
mad_libs(place=beckley,adjective=smart,noun=he)
mad_libs(place="beckley",adjective="smart",noun="he")
%p% <- function(x,y){
paste("x"", "right")
}
%p% <- function(x,y){
paste("x"", "y")
}
"%p%" <- function(left, right){
paste(left, right)
}
submit()
"%p%"("I","love","R")
%p%("I","love","R!")
"%p%"("I","love","R!")
"%p%"("I","love R!")
"%p%"("I","love")"%p%"("love", "R!")
"%p%"("I","%p%"("love", "R!"))
"'I' %p% 'love' %p% 'R!'"
'I' %p% 'love' %p% 'R!'
data(cars)
help
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(dist ~ speed, cars)
plot(x = cars$dist, y = cars$speed)
plot(dist ~ speed, cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "myplot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(col=2, cars)
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
?points
plot(cars, pch=2)
data(mtcars)
play()
dim(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
setwd(C:\Users\Raza\Desktop\Evolution\Tasks\Task_02)
setwd('C:\Users\Raza\Desktop\Evolution\Tasks\Task_02')
setwd('C:\users\Raza\Desktop\Evolution\Tasks\Task_02')
setwd('C:\\users\\Raza\\Desktop\\Evolution\\Tasks\\Task_02')
Data <− read.csv(‘http://jonsmitchell.com/data/beren.csv, stringsAsFactors=F)
Data <− read.csv(‘http://jonsmitchell.com/data/beren.csv,stringsAsFactors=F)
